name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
env:
  # Configure qual domÃ­nio usar
  DOMAIN: c.m7.rs
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  infra:
    runs-on: ubuntu-latest
    outputs:
      s3_name: ${{ steps.outputs.outputs.s3_name }}
      cf_id: ${{ steps.outputs.outputs.cf_id }}
    steps:
    - uses: hashicorp/setup-terraform@v2
    - uses: actions/checkout@v2
    - name: Run initial terraform setup
      working-directory: ./infra-terraform
      run: ./initial_setup.sh "$DOMAIN"
    - name: Run terraform apply
      run: terraform apply -auto-approve -var "domain=$DOMAIN"
      working-directory: ./infra-terraform
    - name: Set terraform outputs
      id: outputs
      working-directory: ./infra-terraform
      run: |
        echo "cf_id=$(terraform-bin output -raw cf_id)" >> $GITHUB_OUTPUT
        echo "s3_name=$(terraform-bin output -raw s3_name)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - run: npm install-clean
      working-directory: ./calculadora
    - run: npm run build
      working-directory: ./calculadora
    - uses: actions/upload-artifact@v2
      with:
        name: app-build
        path: calculadora/build

  deploy:
    runs-on: ubuntu-latest
    needs: [infra, build]
    steps:
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - uses: actions/download-artifact@master
      with:
        name: app-build
        path: build
    - name: Uploadar app no Bucket S3
      run: |
        aws s3 sync ./build/ s3://${{needs.infra.outputs.s3_name}} \
          --cache-control max-age=604800 \
          --acl public-read \
          --delete
    - name: Invalidar cache do cloudfront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{needs.infra.outputs.cf_id}} \
          --paths "/index.html"

